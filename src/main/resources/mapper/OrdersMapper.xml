<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.example.bean.Orders">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="order_evaluation" jdbcType="VARCHAR" property="orderEvaluation" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_total_payment" jdbcType="REAL" property="orderTotalPayment" />
  </resultMap>
  <resultMap id="AllResultMap" type="com.example.bean.Orders">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="order_evaluation" jdbcType="VARCHAR" property="orderEvaluation" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_total_payment" jdbcType="REAL" property="orderTotalPayment" />
    <association property="customer" javaType="com.example.bean.Customer">
    	<id column="customer_id" property="customerId" />
	    <result column="customer_name" property="customerName" />
	    <result column="customer_password" property="customerPassword" />
	    <result column="customer_phone" property="customerPhone" />
	    <result column="customer_address" property="customerAddress" />
    </association>
    <association property="orderDetail" javaType="com.example.bean.OrderDetail">
    	<id column="order_detail_id" property="orderDetailId" />
	    <result column="order_id" property="orderId" />
	    <result column="goods_detail_id" property="goodsDetailId" />
	    <result column="order_detail_goods_quantity" property="orderDetailGoodsQuantity" />
	    <result column="goods_real_payment" property="goodsRealPayment" />
    </association>
    <association property="goodsDetail" javaType="com.example.bean.GoodsDetail">
    	<id column="goods_detail_id" property="goodsDetailId" />
	    <result column="goods_id" property="goodsId" />
	    <result column="goods_detail_name" property="goodsDetailName" />
	    <result column="goods_detail_price" property="goodsDetailPrice" />
	    <result column="goods_detail_quantity" property="goodsDetailQuantity" />
	    <result column="goods_detail_discount" property="goodsDetailDiscount" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, customer_id, order_no, order_status, order_evaluation, order_time, order_total_payment
  </sql>
  <select id="selectWithAll" parameterType="java.lang.String" resultMap="AllResultMap">
  	SELECT a.*,b.*,c.*,d.*
	FROM orders a
	LEFT JOIN customer b ON a.customer_id = b.customer_id
	LEFT JOIN order_detail c ON c.order_id = a.order_id
	LEFT JOIN goods_detail d ON c.goods_detail_id = d.goods_detail_id
	<if test="likeValue != null">
		WHERE CONCAT(d.goods_detail_name,b.customer_name,a.order_no) LIKE '${likeValue}'
	</if>
  </select>
  <select id="selectByExample" parameterType="com.example.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orders
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.bean.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.bean.Orders">
    insert into orders (order_id, customer_id, order_no, 
      order_status, order_evaluation, order_time, 
      order_total_payment)
    values (#{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=VARCHAR}, #{orderEvaluation,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderTotalPayment,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bean.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderEvaluation != null">
        order_evaluation,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderTotalPayment != null">
        order_total_payment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderEvaluation != null">
        #{orderEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTotalPayment != null">
        #{orderTotalPayment,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.orderEvaluation != null">
        order_evaluation = #{record.orderEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderTotalPayment != null">
        order_total_payment = #{record.orderTotalPayment,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      order_evaluation = #{record.orderEvaluation,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_total_payment = #{record.orderTotalPayment,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bean.Orders">
    update orders
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderEvaluation != null">
        order_evaluation = #{orderEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTotalPayment != null">
        order_total_payment = #{orderTotalPayment,jdbcType=REAL},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bean.Orders">
    update orders
    set customer_id = #{customerId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_evaluation = #{orderEvaluation,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_total_payment = #{orderTotalPayment,jdbcType=REAL}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>